@using AnyDex.Data.Themes
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc
@attribute [IgnoreAntiforgeryToken]
@inherits LayoutComponentBase

@inject NavigationManager _navigationManager
@inject SignInManager<User> _signInManager


<!-- Service Providers: Hidden components that allow their usage over any page -->
<MudThemeProvider @ref="ThemeProvider" Theme="Theme" @bind-IsDarkMode="_isDarkModeEnabled" />
<MudDialogProvider @ref="DialogProvider" CloseOnEscapeKey="true" />
<MudSnackbarProvider />

<!-- Page Layout -->
<MudLayout>
    <!-- Top Menu -->
    <MudAppBar Elevation="1">
        <!-- Left Side -->
        <MudIconButton Icon="@Icons.Material.Filled.Menu" 
                       Color="Color.Inherit" 
                       Edge="Edge.Start"
                       OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">AnyDex Project</MudText>
        <MudSpacer />
        <!-- Right Side -->
        <MudIconButton Href="https://github.com/Belotti01/AnyDex" 
                       Target="_blank" 
                       Icon="@Icons.Custom.Brands.GitHub" 
                       Color="Color.Inherit" 
                       Title="AnyDex on GitHub" />
        <MudToggleIconButton @bind-Toggled="_isDarkModeEnabled" 
                             ToggledIcon="@Icons.Material.Filled.DarkMode" 
                             Icon="@Icons.Material.Filled.LightMode" 
                             Color="Color.Inherit" Edge="Edge.End"
                             Title="Switch to Dark Mode" 
                             ToggledTitle="Switch to Light Mode" />
        <!-- User Options -->
        <MudMenu Class="ms-1" Icon="@Icons.Material.Filled.Person" Size="Size.Large" TransformOrigin="Origin.TopCenter" AnchorOrigin="Origin.BottomLeft">
            <AuthorizeView>
                <Authorized>
                    <MudMenuItem><MudNavLink Href="/User/Settings">Settings</MudNavLink></MudMenuItem>
                    <MudMenuItem><MudNavLink Href="/Identity/Account/Logout">Logout</MudNavLink></MudMenuItem>
                </Authorized>
                <NotAuthorized>
                    <MudMenuItem><MudNavLink Href="/Identity/Account/Login">Login</MudNavLink></MudMenuItem>
                    <MudMenuItem><MudNavLink Href="/Identity/Account/Register">Register</MudNavLink></MudMenuItem>
                </NotAuthorized>
            </AuthorizeView>
        </MudMenu>
    </MudAppBar>

    <!-- Side Menu -->
    <MudDrawer @bind-Open="_isDrawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavBarMenu />
    </MudDrawer>

    <!-- Page Content -->
    <MudMainContent>
        @Body
        <!-- "Scroll to Top" Button -->
        <MudScrollToTop>
            <MudFab Color="Color.Default" 
                    Icon="@Icons.Filled.ArrowCircleUp" 
                    IconColor="Color.Info"  
                    IconSize="Size.Large"/>
        </MudScrollToTop>
    </MudMainContent>
</MudLayout>
@code {
    [NotNull]
    private MudThemeProvider? ThemeProvider { get; set; }
    [NotNull]
    private MudDialogProvider? DialogProvider { get; set; }
    private MudTheme Theme { get; set; } = DefaultTheme.Theme;
    // Default to TRUE to avoid throwing a flashbang to dark-mode user on page load
    private bool _isDarkModeEnabled = true;
    private bool _isDrawerOpen = true;


    protected override async Task OnAfterRenderAsync(bool firstRender) {
        if(firstRender) {
            bool systemPreference = await ThemeProvider.GetSystemPreference();
            // Skip re-rendering if nothing actually changes
            if(_isDarkModeEnabled != systemPreference) {
                _isDarkModeEnabled = systemPreference;
                StateHasChanged();
            }
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    void NavigateTo(string link) {
        _navigationManager.NavigateTo(link);
    }

    void DrawerToggle() {
        _isDrawerOpen = !_isDrawerOpen;
    }
}