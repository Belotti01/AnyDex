@using System.ComponentModel.DataAnnotations
<MudPaper Elevation="5" Class="d-block p-4 w-75 mx-auto">
	<MudText Class="ml-0 mt-0" Color="@Color.Info" Typo="Typo.subtitle1">
		@Title
	</MudText>

	<MudImage Class="d-block mx-auto" 
				Src="@(string.IsNullOrEmpty(Value) 
					? DefaultValue
					: Value)"
				Elevation="2"
				Fluid
				Width="180" 
				ObjectPosition="ObjectPosition.Top"/>
	<MudTextField Adornment="Adornment.End" 
					AdornmentIcon="@Icons.Material.Outlined.Image" 
					Label="URL:" 
					Value="@Value" 
					ValueChanged="ValueChanged"
					Clearable
					For="() => Value"
					HelperTextOnFocus="true"
					HelperText="@HelperText"/>
</MudPaper>

@code {
	[Required, Parameter]
	public string? Value { get; set; }
	[Parameter]
	public string Title { get; set; } = "";
	[Parameter]
	public string DefaultValue { get; set; } = "";
	[Parameter]
	public string? HelperText { get; set; }

	[Parameter]
	public EventCallback<string> ValueChanged { get; set; }

	public async Task OnValueChanged(string value) {
		if(ValueChanged.HasDelegate) {
			await ValueChanged.InvokeAsync(value);
		}
	}
}
