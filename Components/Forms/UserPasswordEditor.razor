@inherits BaseDbComponent<UserPasswordEditor>

<MudCard>
	<MudCardContent>
		<MudForm Class="mx-5" @bind-IsValid="CanRequestPasswordChange" >
			<MudGrid Spacing="3" Justify="Justify.SpaceAround">
				<MudItem md="6" sm="9" xs="11">
					<MudCard Elevation="2">
						<MudCardTitle>Password</MudCardTitle>
						<MudCardContent>
							<MudTextField Label="Current Password" 
											@bind-Value="_currentPasswordField" 
											InputType="InputType.Password" 
											Required/>
							<MudTextField Label="New Password" 
											@bind-Value="_newPasswordField" 
											InputType="InputType.Password" 
											Required/>
							<MudTextField Label="Confirm New Password" 
											@bind-Value="_confirmNewPasswordField" 
											InputType="InputType.Password" 
											Required/>
						</MudCardContent>
						<MudCardActions>
							<MudButton Disabled="!CanRequestPasswordChange" 
									   Class="d-block mx-auto" 
									   OnClick="UpdatePasswordAsync">Change Password</MudButton>
						</MudCardActions>
					</MudCard>
				</MudItem>
			</MudGrid>
		</MudForm>
	</MudCardContent>
</MudCard>

@code {
	protected bool CanRequestPasswordChange = false;
	private string _currentPasswordField { get; set; } = "";
	private string _newPasswordField { get; set; } = "";
	private string _confirmNewPasswordField { get; set; } = "";

	protected async Task UpdatePasswordAsync(MouseEventArgs e) {
		bool isPasswordChangeRequested = !(
			string.IsNullOrEmpty(_newPasswordField)
			|| string.IsNullOrEmpty(_confirmNewPasswordField)
		);
		if(!isPasswordChangeRequested) {
			return;	// Password change was not requested
		}

		if(CurrentUser is null) {
			return;	// User could not be loaded - should never get here, but handle it anyway
		}

		if(await UserManager.CheckPasswordAsync(CurrentUser, _newPasswordField)) {
			Snackbar.AddError("New Password must be different than the current Password.");
			return;
		}

		var result = await UserManager.ChangePasswordAsync(CurrentUser, _currentPasswordField, _newPasswordField);
		if(result.Succeeded) {
			Snackbar.AddSuccess("Password changed successfully!");
		} else {
			Snackbar.AddError(result.Errors.First()?.Description ?? "Password could not be changed.");
		}
	}
}
